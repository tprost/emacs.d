#+CATEGORY: emacs

* TODO sort out new line indent vs C-j vs electric etc.
* TODO the fuck is the backtab key
* TODO investigate paredit
* TODO investigate structured-haskell-mode
build isn't working oh no
* DONE write my-isearch-from-beginning-of-buffer :binding:
* TODO write my-duplicate-paragraph :binding:
* TODO delete-trailing-whitespace :binding:
* DONE duplicate line doesn't work great
* TODO vterm C-o :binding:
* TODO emacs project minor mode + project registers
* TODO search buffer :binding:
* TODO fix line artifact in echo area pink
* TODO visit most recent error from haskystack test vterm fn
* TODO explore bookmarks
* DONE explore registers
https://www.gnu.org/software/emacs/manual/html_node/emacs/Registers.html
* TODO explore hippie-expand
* TODO go straight to bindings file command
* TODO there's lots more to mark :bindings:
* TODO multiple cursors! :bindings:
* TODO fix Haskell clean up imports
* TODO how do I make Flycheck ignore untyped stuff
* TODO Start up Haskell REPL and send code to it :haskell:
* TODO Haskell REPL mode + bindings + setup

* TODO assign buffers to numbers? or just use tab mode?

* DONE style my tab bar mode
* DONE explore tab bar history


* TODO organize org bindings with C-c 
* TODO tweak C-c . <key> bindings to be not C-<key> :hs:
* DONE fix C-x C-a in elisp and other modes :bindings:

* DONE why does LSP mode for Haskell chug at startup 
(and then later at random times)
I guess because the env isn't cached? seems better now with direnv-nix
(also emacs direnv mode is really bad a remembering the env)

* DONE org mode hide/show binding should match
* DONE use tab mode? perhaps for project vterms?
* TODO how do we organize various scripts for local dev? Makefile?

* TODO get lsp mode working for elisp :elisp:

* TODO my-haskell-rename function 1 :haskell:
* DONE setup flycheck and keybindings
* TODO Haskell mode bindings :haskell:
* TODO work through the rest of org mode functions and bindings :org:

* TODO make sure projectile doesn't search through a million unnecessary lisp files
* TODO find a way to organize and run processes and set up shells per project
* TODO automatically invoke lsp-mode for Python files and projects :python:
* TODO make sure virtual environment is used for commands in Python projects with .venv? :python:

* TODO take first error link in compilation buffer and visit it in code window/frame
* TODO function to find all occurences of TODO in project

* TODO hotkey for creating a feature branch off of develop based on JIRA tag and name? :bindings:
* TODO easier hotkeys for switch to wdired mode and out :bindings:dired:

* TODO find and remember command to start an additional shell
* DONE tab in shell mode should autocomplete :bindings:
vterm seems to work fine thank you

* TODO dired mode color coding filenames?

* TODO faster input mode... rebind RET?
* TODO better switch to test file function (for Haskell?)
* TODO figure out what "todo order" is in org mode :org:

* TODO find definition lookup in hackage
* TODO set up interactive haskell bindings :bindings:
http://haskell.github.io/haskell-mode/manual/latest/
* DONE setup flyspell?
* TODO haskell mode align binding :bindings:
http://haskell.github.io/haskell-mode/manual/latest/Aligning-code.html#Aligning-code
* TODO macro to set up frame and window for emacs editing?
* TODO enlarge frame to two window units size macro
* TODO figure out "stage all unstaged changes" in magit mode binding

* TODO editorconfig

* TODO function to create a definition for word with goldendict :japanese:
* TODO binding for goldendict lookup :japanese:
* TODO binding for quick japanese org capture? :japanese:bindings:
* TODO automatically add spacing between each item :japanese:
* TODO hide square brackets on showing answer? :japanese:
It'd be nice to be able to lookup stuff without going back to edit mode.
Maybe allow cursor navigation?
* TODO kanji drill mode with stroke order font :japanese:
* TODO experiment with better looking Japanese font (Mincho) :japanese:

* TODO get python lsp working for all projects :python:
* TODO direnv for python projects :python: :direnv:

* TODO projectile file ignore list :projectile:
* TODO set up a japanese word todo capture system
Because if I think of a word I want to memorize in Japanese, I want to quickly capture it and not have to make a drill item right away.
* TODO investigate term-projectile + automatic named services for project
* TODO explore how to have an extra folder of yasnippets :yasnippet:
* TODO how do I quickly look at the snippets for a mode, for example Haskell :yasnippet:
* TODO Prompt to fire up project vterm buffers, docker, etc. when entering appropriate project
* TODO [#A] shortcut to go to projectile vterm with helm? quick keybindings to 1-9? :bindings:
* TODO projectile level mapping of vterm identifiers and the command we should run
* TODO projectile vterms should be configured to have run command?

* TODO Function to start a general purpose vterm shell with a particular buffer name with command?
* TODO Function to run command in existing vterm buffer

* TODO use .venv automatically for shell and one-off projectile shell commands
- Start docker compose up in a shell
- Start the local server (.venv)
- Be able to run unit tests (.venv)
- Be able to run BDD tests (.venv)
- Reproduce it across MacOS and linux? 
- Shell for running manage.py commands?
* TODO My Go Projects (Start docker compose)

* TODO Projectile, Layout, Project Terminals and Shell Commands
* DONE cleanup file structure in .emacs.d

* DONE set up a nice home screen with drill?

* DONE make shell use up arrow key for previous command
* DONE projectile stack test binding just for Haskell projects? :haskell:

* DONE how do I want indentation to work? what bindings do I want? :bindings:
* DONE indentation bindings :bindings:
* DONE Function to start a projectile vterm shell with a particular buffer name with command
my-projectile-run-vterm-dwim
* DONE fix lsp mode so it starts automatically
* DONE fix the goddamn C-M-j binding 
* DONE crux-rename file and buffer binding
* DONE clean up old init directory

* DONE org mode specific ligatures for todo items? :org:
Can't do this. Ligatures are only for [TODO] [OK] etc

* DONE include csv-mode

* DONE make sure org mode org-level-1 .. org-level-4 faces are height 1.0 :org:

* DONE ligatures only in haskell mode, not in markdown mode :appearance:

* DONE yasnippet for Haskell :haskell:yasnippet:
* DONE emacs lisp yasnippets... at least defun :yasnippet:
* DONE elisp binding hydra yasnippet? :bindings:yasnippet:
* DONE how to move from one thing to the next in a yasnippet :yasnippet:
* DONE org mode tag faces doesn't work for multiple tags :org:appearance:
You were using tags wrong. They :look:like:this:.
* DONE org mode visual line mode :bindings:
* DONE sort out the differences between C-x C-o, C-x o, x o, x C-o :bindings:
* DONE org-table-align binding :org:bindings:
* DONE org mode hyper key :org:bindings:

* DONE make-frame binding :bindings:
* DONE org-insert-link :bindings:
* DONE visual line mode :bindings:

* DONE sort out emacs hotkeys :bindings:
* DONE one keypress run the project tests with the default command
* DONE clean up buffer keybinding
with appropriate function for my todo files
* DONE [#E] make separate bindings directory with separate files for each mode
* DONE when you leave a buffer, reset state to monster state, for editable buffers
* DONE only show function keys on specific applications (Emacs)
* DONE mark buffer should have a binding that isn't c-c h

* DONE add nixos configuration to TODO file
* DONE todo aggregation shortcut and startup hotkey
* DONE do I really need evil mode?

* DONE [#A] fix weird issue can't select text in monster moode
* DONE [#B] set up bindings for rectangle commands
http://haskell.github.io/haskell-mode/manual/latest/Rectangular-commands.html#Rectangular-commands
* DONE insert mode automatic on org capture mode not working
* DONE dedicated restclient buffer for project (.restclient)
.restclient files should automatically start into restclient mode

* DONE fix default evil state
* DONE org priority functions :org:

* DONE better org mode tag color :org:
* DONE haskell hide mode show all function

* DONE [#A] lsp bindings?
what lsp prefix do I use?
what about the single keystrokes in normal state?

* DONE [#A] bindings for opening .emacs.d and related files?
* DONE [#A] quick jump to emacs bindings.el, settings.el, emacs find file
* DONE [#A] fix evil mode for dired mode
* DONE [#A] fix region highlight and cursor for evil normal mode
* DONE open project todo file fn+binding
* DONE transpose windows binding
* DONE switch to test file binding
* DONE trim whitespace/blank lines function
* DONE quick jump to project todo.org file
* DONE quick jump to emacs todo.org file
* DONE move line up/down
* DONE emacs org todo capture
* DONE q key should kill buffer in normal mode

* DONE fix text size for both Mac and linux at the same time

* DONE magit commit mode should automatically be in insert mode
* DONE dedicated cleanup buffer DWIM key (org mode todo files run my macro)
* DONE fix color scheme for org mode (why is it all red)
* DONE a way to quickly mark a for loop

* DONE macro to sort and file todo file?
* DONE evil mode on... editable buffers?
* DONE todo agenda broken down by file?
* DONE set up agenda/todo to find todos from code projects and wiki repo
* DONE fix C-x C-f
* DONE find and remember commands to resize frame
* DONE C-x w hotkeys
* DONE make-frame hotkey
* DONE hideshow bindings
